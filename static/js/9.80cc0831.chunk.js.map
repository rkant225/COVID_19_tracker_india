{"version":3,"sources":["Demo/COVID_19/DailyUpdatesTable.js","Demo/COVID_19/DataChart.js","Demo/COVID_19/DataCharts.js","Demo/COVID_19/COVID_19.js"],"names":["DailyUpdatesTable","cases","this","props","dailyUpdateData","map","data","length","detailsRow","record","index","key","date","scope","dailyconfirmed","totalconfirmed","dailyrecovered","totalrecovered","dailydeceased","totaldeceased","Card","Header","Title","as","Body","Table","variant","responsive","getTotalConfirmedCases","getTotalRecoveredCases","getTotalDeathCount","Component","DataChart","chartData","type","height","options","chart","sparkline","enabled","dataLabels","colors","strokeColor","stroke","curve","width","tooltip","fixed","x","show","y","title","formatter","seriesName","marker","series","Col","md","xl","className","Footer","colorClass","Row","label","DataCharts","labels","types","colorClasses","strokeColors","charts","forEach","elem","push","COVID_19","state","fetch","then","res","json","setState","cases_time_series","catch","err","console","log"],"mappings":"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","file":"static/js/9.80cc0831.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card, Table} from 'react-bootstrap';\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\n\r\nclass DailyUpdatesTable extends Component {\r\n\r\n    getTotalDeathCount(){\r\n        const cases = this.props.dailyUpdateData && this.props.dailyUpdateData.map(data => data['totaldeceased'] );\r\n        return cases[cases.length - 1];\r\n    }\r\n\r\n    getTotalConfirmedCases(){\r\n        const cases = this.props.dailyUpdateData && this.props.dailyUpdateData.map(data => data['totalconfirmed'] );\r\n        return cases[cases.length - 1];\r\n    }\r\n\r\n    getTotalRecoveredCases(){\r\n        const cases = this.props.dailyUpdateData && this.props.dailyUpdateData.map(data => data['totalrecovered'] );\r\n        return cases[cases.length - 1];\r\n    }\r\n        \r\n    render() {        \r\n\r\n        const detailsRow = this.props.dailyUpdateData.map((record, index) => {\r\n            return(\r\n                <tr key={record.date}>\r\n                    <th scope=\"row\">{index}</th>\r\n                    <td>{record.date}</td>\r\n                    <td>{record.dailyconfirmed}</td>\r\n                    <td>{record.totalconfirmed}</td>\r\n                    <td>{record.dailyrecovered}</td>\r\n                    <td>{record.totalrecovered}</td>\r\n                    <td>{record.dailydeceased}</td>\r\n                    <td>{record.totaldeceased}</td>\r\n                </tr>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <Aux>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h3\">COVID-19 Daily Updates</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table variant=\"dark\" responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>SNo.</th>\r\n                                <th>Date</th>\r\n                                <th>Confirmed today</th>\r\n                                <th>Confirmed til date = {this.getTotalConfirmedCases()}</th>\r\n                                <th>Recovered today</th>\r\n                                <th>Recovered till date = {this.getTotalRecoveredCases()}</th>\r\n                                <th>Death today</th>\r\n                                <th>Total Death = {this.getTotalDeathCount()}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {detailsRow}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DailyUpdatesTable;","import React, {Component} from 'react';\r\nimport {Row, Col, Card, Table} from 'react-bootstrap';\r\nimport Chart from \"react-apexcharts\";\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\n\r\nclass DataChart extends Component {\r\n\r\n        \r\n    render() {        \r\n\r\n        const chartData = {\r\n            type: 'area', height: 100,\r\n            options: { chart: { sparkline: { enabled: true } },\r\n                dataLabels: { enabled: false },\r\n                colors: [this.props.strokeColor],\r\n                stroke: { curve: 'smooth', width: 2, },\r\n                tooltip: { fixed: { enabled: false },\r\n                    x: { show: false }, \r\n                    y: { title: { formatter: (seriesName) => 'Ticket ' } },\r\n                    marker: { show: false }\r\n                }\r\n            },\r\n            series: [{\r\n                data: this.props.series\r\n            }]\r\n        }\r\n        \r\n\r\n        return (\r\n            <Aux>\r\n                <Col md={2} xl={4}>\r\n                    <Card>\r\n                        <Card.Body className='pb-0'>\r\n                            <h3 className=\"m-0\">Today : {this.props.series[this.props.series.length -1]}</h3>\r\n                        </Card.Body>\r\n                        <Card.Body className='p-0'>\r\n                            <Chart {...chartData} />\r\n                        </Card.Body>\r\n                        <Card.Footer className={`${this.props.colorClass} text-white`}>\r\n                            <Row className='text-center'>\r\n                                <h3 className=\"m-0 text-white\">{this.props.label}</h3>                                \r\n                            </Row>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n                    \r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataChart;","import React, {Component} from 'react';\r\nimport {Row, Col, Card, Table} from 'react-bootstrap';\r\nimport Chart from \"react-apexcharts\";\r\nimport DataChart from './DataChart';\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\n\r\nclass DataCharts extends Component {\r\n\r\n        \r\n    render() {        \r\n\r\n       const labels = [\"+ve per day\", \"Recovery per day\", \"Death per day\"];\r\n       const types = ['dailyconfirmed','dailyrecovered' ,'dailydeceased'];\r\n       const colorClasses = ['bg-primary', 'bg-success', 'bg-danger']\r\n       const strokeColors = ['#0000ff', '#00ff00', '#ff0000']\r\n\r\n       const charts = [];\r\n\r\n       labels.forEach((elem,index)=>{\r\n        charts.push(<DataChart key={strokeColors[index]} series={this.props.dailyUpdateData && this.props.dailyUpdateData.map(data => data[types[index]] )} label={labels[index]} colorClass={colorClasses[index]} strokeColor={strokeColors[index]}/>)\r\n       })\r\n\r\n        \r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    {charts}\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataCharts;","import React, {Component} from 'react';\r\nimport {Row, Col, Card, Table} from 'react-bootstrap';\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DailyUpdatesTable from './DailyUpdatesTable';\r\nimport DataCharts from './DataCharts';\r\n\r\n\r\nclass COVID_19 extends Component {\r\n\r\n    state={dailyUpdateData : []}\r\n    \r\n    componentDidMount(){\r\n\r\n        fetch('https://api.covid19india.org/data.json')\r\n            .then(res => res.json())\r\n            .then(data => this.setState({dailyUpdateData : data.cases_time_series}))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        \r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <DataCharts dailyUpdateData={this.state.dailyUpdateData} />\r\n                            \r\n                            <DailyUpdatesTable dailyUpdateData = {this.state.dailyUpdateData}/>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default COVID_19;"],"sourceRoot":""}